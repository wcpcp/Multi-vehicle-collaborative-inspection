<?xml version="1.0"?>
<launch>

    <arg name="world_name" value="$(find qingzhou_gazebo)/worlds/2.world" />
    <arg name="model" default="$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro"/>
    <arg name="cmd_timeout" default="0.5"/>

    <arg name="robot_name_0" default="/qingzhou_0" />
    <arg name="x" default="14.0"/>
    <arg name="y" default="11.0"/>
    <arg name="z" default="0.1"/>
    <arg name="yaw" default="0.0"/>

    <arg name="robot_name_1" default="/qingzhou_1" />
    <arg name="x1" default="19.0"/>
    <arg name="y1" default="34.0"/>
    <arg name="z1" default="0.1"/>
    <arg name="yaw1" default="0.0"/>

    <arg name="robot_name_2" default="/qingzhou_2" />
    <arg name="x2" default="5.0"/>
    <arg name="y2" default="35.0"/>
    <arg name="z2" default="0.1"/>
    <arg name="yaw2" default="0.0"/>

    <arg name="robot_name_3" default="/qingzhou_3" />
    <arg name="x3" default="5.0"/>
    <arg name="y3" default="42.0"/>
    <arg name="z3" default="0.1"/>
    <arg name="yaw3" default="0.0"/>

    <arg name="robot_name_4" default="/qingzhou_4" />
    <arg name="x4" default="27.0"/>
    <arg name="y4" default="8.0"/>
    <arg name="z4" default="0.1"/>
    <arg name="yaw4" default="0.0"/>


    <arg name="robot_name_5" default="/qingzhou_5" />
    <arg name="x5" default="35.0"/>
    <arg name="y5" default="35.0"/>
    <arg name="z5" default="0.1"/>
    <arg name="yaw5" default="0.0"/>

    <!-- Gazebo  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" default="$(arg world_name)"/>
    </include>

    <group ns="$(arg robot_name_0)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_0) "/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_0)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_0)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_0)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_0)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_0)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_0)" /> 
        </node>

       <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel --> 
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_0)/ackermann_steering_controller/cmd_vel"/>
        </node> -->


        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_0)
                -x $(arg x) -y $(arg y) -z $(arg z) -Y$(arg yaw)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_0)/ydlidar_link qingzhou0/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_0)/camera_link  $(arg robot_name_0)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom0" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_0)/map  $(arg robot_name_0)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_0)/odom" />
        <param name="robot_name" value="$(arg robot_name_0)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />


    </group>


    <group ns="$(arg robot_name_1)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_1)"/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_1)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_1)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_1)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_1)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_1)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_1)" /> 
        </node>
        
        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_1)
                -x $(arg x1) -y $(arg y1) -z $(arg z1) -Y $(arg yaw1)"
            respawn="false" output="screen" />

        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_1)/ackermann_steering_controller/cmd_vel"/>
        </node> -->

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_1)/ydlidar_link qingzhou1/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_1)/camera_link  $(arg robot_name_1)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom1" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_1)/map  $(arg robot_name_1)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_1)/odom" />
        <param name="robot_name" value="$(arg robot_name_1)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />

    </group>
    <group ns="$(arg robot_name_2)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_2) "/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_2)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_2)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_2)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_2)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_2)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_2)" /> 
        </node>

       <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel --> 
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_2)/ackermann_steering_controller/cmd_vel"/>
        </node> -->


        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_2)
                -x $(arg x2) -y $(arg y2) -z $(arg z2) -Y$(arg yaw2)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_2)/ydlidar_link qingzhou0/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_2)/camera_link  $(arg robot_name_2)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom0" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_2)/map  $(arg robot_name_2)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_2)/odom" />
        <param name="robot_name" value="$(arg robot_name_2)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />

    </group>

    <group ns="$(arg robot_name_3)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_3) "/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_3)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_3)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_3)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_3)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_3)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_3)" /> 
        </node>

       <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel --> 
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_3)/ackermann_steering_controller/cmd_vel"/>
        </node> -->


        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_3)
                -x $(arg x3) -y $(arg y3) -z $(arg z3) -Y$(arg yaw3)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_3)/ydlidar_link qingzhou0/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_3)/camera_link  $(arg robot_name_3)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom0" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_3)/map  $(arg robot_name_3)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_3)/odom" />
        <param name="robot_name" value="$(arg robot_name_3)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />

    </group>

    <group ns="$(arg robot_name_4)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_4) "/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_4)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_4)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_4)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_4)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_4)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_4)" /> 
        </node>

       <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel --> 
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_4)/ackermann_steering_controller/cmd_vel"/>
        </node> -->


        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_4)
                -x $(arg x4) -y $(arg y4) -z $(arg z4) -Y$(arg yaw4)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_4)/ydlidar_link qingzhou0/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_4)/camera_link  $(arg robot_name_4)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom0" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_4)/map  $(arg robot_name_4)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_4)/odom" />
        <param name="robot_name" value="$(arg robot_name_4)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />

    </group>

    <group ns="$(arg robot_name_5)">

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qingzhou_description)/urdf/qingzhou_run.urdf.xacro'  prefix:=$(arg robot_name_5) "/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find qingzhou_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg robot_name_5)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_gains.yaml" command="load" ns="$(arg robot_name_5)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg robot_name_5)" />
        <rosparam file="$(find qingzhou_control)/config/ctrl_qingzhou_hardware_gazebo.yaml" command="load" ns="$(arg robot_name_5)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg robot_name_5)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
            <param name="tf_prefix" value="$(arg robot_name_5)" /> 
        </node>

       <!-- Launch a rqt steering GUI for publishing to /qingzhou/steer_drive_controller/cmd_vel --> 
        <!-- <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg robot_name_5)/ackermann_steering_controller/cmd_vel"/>
        </node> -->


        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model $(arg robot_name_5)
                -x $(arg x5) -y $(arg y5) -z $(arg z5) -Y$(arg yaw5)"
            respawn="false" output="screen" />

        <node pkg="tf" type="static_transform_publisher" name="ydlidar_link_to_laser" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_5)/ydlidar_link qingzhou0/ydlidar_link  20" />
        <node pkg="tf" type="static_transform_publisher" name="camera_link_to_bot" args="0.0 0.0 0.0 3.14 0  0    $(arg robot_name_5)/camera_link  $(arg robot_name_5)/  20" />

        <node pkg="tf" type="static_transform_publisher" name="qingzhou_map_to_odom0" args="0.0 0.0 0.0 0.0 0 0  $(arg robot_name_5)/map  $(arg robot_name_5)/odom  20" />

        <param name="robot_name_odom" value="$(arg robot_name_5)/odom" />
        <param name="robot_name" value="$(arg robot_name_5)" />
        <node pkg="qingzhou_nav" type="get_state" name="get_state" />

    </group>

    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map0" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_0)/map  20" />  
    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map1" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_1)/map  20" /> 
    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map2" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_2)/map  20" /> 
    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map3" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_3)/map  20" /> 
    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map4" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_4)/map  20" /> 
    <node pkg="tf" type="static_transform_publisher" name="qingzhou_world_to_map5" args="0.0 0.0 0.0 0.0 0 0  /world  $(arg robot_name_5)/map  20" /> 
</launch>
    
   
